<%
  // Copyright 2013 Foursquare Labs Inc. All Rights Reserved.

  import _root_.io.fsq.spindle.codegen.runtime.StructLike
%>
<%@ val cls: StructLike %>
<%@ val clsContainer: String %>
final class Raw${cls.name}
  extends _root_.io.fsq.spindle.runtime.Record[${cls.name}]
  with _root_.io.fsq.spindle.runtime.MutableRecord[${cls.name}]
  with #if (cls.generateMutable)Mutable#(end)${cls.name} {

  override def meta: ${cls.name}Meta = ${cls.name}

  // fields
#for (field <- cls.fields)
<% render(field.renderType.fieldImplTemplate, Map("field" -> field, "cls" -> cls)) %>
#end
  // end fields

<%-- A list, because we may read a single record from multiple protocols: Unknown fields serialized
    using protocol P1 may contain nested unknown fields previously serialized using protocol P2. --%>
  private[this] var unknownFields: List[_root_.io.fsq.spindle.runtime.UnknownFields] = Nil

<% render("class_impls_write.ssp", Map("cls" -> cls)) %>

<% render("class_impls_read.ssp", Map("cls" -> cls)) %>

<% render("class_impls_merge.ssp", Map("cls" -> cls)) %>

<% render("class_impls_mergecopy.ssp", Map("cls" -> cls)) %>

<% render("class_impls_deepmergecopy.ssp", Map("cls" -> cls)) %>

<% render("class_impls_equals.ssp", Map("cls" -> cls)) %>

<% render("class_impls_hashcode.ssp", Map("cls" -> cls)) %>

<% render("class_impls_getsetfields.ssp", Map("cls" -> cls)) %>

<% render("class_impls_clear.ssp", Map("cls" -> cls)) %>

<% render("class_impls_thrift_introspection.ssp", Map("cls" -> cls)) %>

<% render("class_impls_deepcopy.ssp", Map("cls" -> cls)) %>

<% render("class_impls_copy.ssp", Map("cls" -> cls)) %>

<% render("class_impls_tostring.ssp", Map("cls" -> cls)) %>
}
